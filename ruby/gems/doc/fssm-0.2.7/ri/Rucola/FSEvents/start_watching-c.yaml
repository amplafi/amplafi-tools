--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
  - !ruby/struct:SM::Flow::P 
    body: Initializes a new FSEvents `watchdog` object and starts watching the directories you specify for events. The block is used as a handler for events, which are passed as the block's argument. This method is the easiest way to start watching some directories if you don't care about the details of setting up the event stream.
  - !ruby/struct:SM::Flow::VERB 
    body: "  Rucola::FSEvents.start_watching('/tmp') do |events|\n    events.each { |event| log.debug(&quot;#{event.files.inspect} were changed.&quot;) }\n  end\n\n  Rucola::FSEvents.start_watching('/var/log/system.log', '/var/log/secure.log', :since =&gt; last_id, :latency =&gt; 5) do\n    Growl.notify(&quot;Something was added to your log files!&quot;)\n  end\n"
  - !ruby/struct:SM::Flow::P 
    body: Note that the method also returns the FSEvents object. This enables you to control the event stream if you want to.
  - !ruby/struct:SM::Flow::VERB 
    body: "  fsevents = Rucola::FSEvents.start_watching('/Volumes') do |events|\n    events.each { |event| Growl.notify(&quot;Volume changes: #{event.files.to_sentence}&quot;) }\n  end\n  fsevents.stop\n"
full_name: Rucola::FSEvents::start_watching
is_singleton: true
name: start_watching
params: (*params, &block)
visibility: public
