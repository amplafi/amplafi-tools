--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
  - !ruby/struct:SM::Flow::P 
    body: Watches the template directory (or directories) and updates the CSS files whenever the related Sass/SCSS files change. `watch` never returns.
  - !ruby/struct:SM::Flow::P 
    body: Whenever a change is detected to a Sass/SCSS file in {file:SASS_REFERENCE.md#template_location-option `:template_location`}, the corresponding CSS file in {file:SASS_REFERENCE.md#css_location-option `:css_location`} will be recompiled. The CSS files of any Sass/SCSS files that import the changed file will also be recompiled.
  - !ruby/struct:SM::Flow::P 
    body: Before the watching starts in earnest, `watch` calls \{#update_stylesheets}.
  - !ruby/struct:SM::Flow::P 
    body: Note that `watch` uses the [FSSM](http://github.com/ttilley/fssm) library to monitor the filesystem for changes. FSSM isn't loaded until `watch` is run. The version of FSSM distributed with Sass is loaded by default, but if another version has already been loaded that will be used instead.
  - !ruby/struct:SM::Flow::P 
    body: "@param individual_files [Array&lt;(String, String)&gt;]"
  - !ruby/struct:SM::Flow::VERB 
    body: "  A list of files to watch for updates\n  **in addition to those specified by the\n  {file:SASS_REFERENCE.md#template_location-option `:template_location` option}.**\n  The first string in each pair is the location of the Sass/SCSS file,\n  the second is the location of the CSS file that it should be compiled to.\n"
full_name: Sass::Plugin::Compiler#watch
is_singleton: false
name: watch
params: (individual_files = [])
visibility: public
