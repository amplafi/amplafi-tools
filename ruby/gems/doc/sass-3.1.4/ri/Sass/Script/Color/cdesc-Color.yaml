--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: 
  - !ruby/object:RI::MethodSummary 
    name: new
comment: 
  - !ruby/struct:SM::Flow::P 
    body: A SassScript object representing a CSS color.
  - !ruby/struct:SM::Flow::P 
    body: A color may be represented internally as RGBA, HSLA, or both. It's originally represented as whatever its input is; if it's created with RGB values, it's represented as RGBA, and if it's created with HSL values, it's represented as HSLA. Once a property is accessed that requires the other representation -- for example, \{#red} for an HSL color -- that component is calculated and cached.
  - !ruby/struct:SM::Flow::P 
    body: The alpha channel of a color is independent of its RGB or HSL representation. It's always stored, as 1 if nothing else is specified. If only the alpha channel is modified using \{#with}, the cached RGB and HSL values are retained.
constants: 
  - !ruby/object:RI::Constant 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: A hash from color names to `[red, green, blue]` value arrays.
    name: HTML4_COLORS
    value: map_vals({         'black'   => 0x000000,         'silver'  => 0xc0c0c0,         'gray'    => 0x808080,         'white'   => 0xffffff,         'maroon'  => 0x800000,         'red'     => 0xff0000,         'purple'  => 0x800080,         'fuchsia' => 0xff00ff,         'green'   => 0x008000,         'lime'    => 0x00ff00,         'olive'   => 0x808000,         'yellow'  => 0xffff00,         'navy'    => 0x000080,         'blue'    => 0x0000ff,         'teal'    => 0x008080,         'aqua'    => 0x00ffff
  - !ruby/object:RI::Constant 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: A hash from `[red, green, blue]` value arrays to color names.
    name: HTML4_COLORS_REVERSE
    value: map_hash(HTML4_COLORS) {|k, v| [v, k]}
full_name: Sass::Script::Color
includes: 
  - !ruby/object:RI::IncludedModule 
    name: Sass::Util
instance_methods: 
  - !ruby/object:RI::MethodSummary 
    name: alpha
  - !ruby/object:RI::MethodSummary 
    name: alpha?
  - !ruby/object:RI::MethodSummary 
    name: blue
  - !ruby/object:RI::MethodSummary 
    name: div
  - !ruby/object:RI::MethodSummary 
    name: eq
  - !ruby/object:RI::MethodSummary 
    name: green
  - !ruby/object:RI::MethodSummary 
    name: hsl
  - !ruby/object:RI::MethodSummary 
    name: hue
  - !ruby/object:RI::MethodSummary 
    name: inspect
  - !ruby/object:RI::MethodSummary 
    name: lightness
  - !ruby/object:RI::MethodSummary 
    name: minus
  - !ruby/object:RI::MethodSummary 
    name: mod
  - !ruby/object:RI::MethodSummary 
    name: plus
  - !ruby/object:RI::MethodSummary 
    name: red
  - !ruby/object:RI::MethodSummary 
    name: rgb
  - !ruby/object:RI::MethodSummary 
    name: saturation
  - !ruby/object:RI::MethodSummary 
    name: times
  - !ruby/object:RI::MethodSummary 
    name: to_s
  - !ruby/object:RI::MethodSummary 
    name: to_sass
  - !ruby/object:RI::MethodSummary 
    name: with
name: Color
superclass: Literal
