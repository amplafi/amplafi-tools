--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
  - !ruby/struct:SM::Flow::P 
    body: Creates a {Color} object from hue, saturation, and lightness, as well as an alpha channel indicating opacity. Uses the algorithm from the [CSS3 spec](http://www.w3.org/TR/css3-color/#hsl-color).
  - !ruby/struct:SM::Flow::P 
    body: "@param hue [Number] The hue of the color."
  - !ruby/struct:SM::Flow::VERB 
    body: "  Should be between 0 and 360 degrees, inclusive\n"
  - !ruby/struct:SM::Flow::P 
    body: "@param saturation [Number] The saturation of the color."
  - !ruby/struct:SM::Flow::VERB 
    body: "  Must be between `0%` and `100%`, inclusive\n"
  - !ruby/struct:SM::Flow::P 
    body: "@param lightness [Number] The lightness of the color."
  - !ruby/struct:SM::Flow::VERB 
    body: "  Must be between `0%` and `100%`, inclusive\n"
  - !ruby/struct:SM::Flow::P 
    body: "@param alpha [Number] The opacity of the color."
  - !ruby/struct:SM::Flow::VERB 
    body: "  Must be between 0 and 1, inclusive\n"
  - !ruby/struct:SM::Flow::P 
    body: "@return [Color] The resulting color @see #hsl @raise [ArgumentError] if `saturation`, `lightness`, or `alpha` are out of bounds"
full_name: Sass::Script::Functions#hsla
is_singleton: false
name: hsla
params: (hue, saturation, lightness, alpha)
visibility: public
