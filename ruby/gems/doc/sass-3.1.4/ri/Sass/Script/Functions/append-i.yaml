--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
  - !ruby/struct:SM::Flow::P 
    body: Appends a single value onto the end of a list.
  - !ruby/struct:SM::Flow::P 
    body: Unless the `$separator` argument is passed, if the list has only one item, the resulting list will be space-separated.
  - !ruby/struct:SM::Flow::P 
    body: "@example"
  - !ruby/struct:SM::Flow::VERB 
    body: "  append(10px 20px, 30px) =&gt; 10px 20px 30px\n  append((blue, red), green) =&gt; blue, red, green\n  append(10px 20px, 30px 40px) =&gt; 10px 20px (30px 40px)\n  join(10px, 20px, comma) =&gt; 10px, 20px\n  join((blue, red), green, space) =&gt; blue red green\n"
  - !ruby/struct:SM::Flow::P 
    body: "@overload join(list, val, separator: auto)"
  - !ruby/struct:SM::Flow::VERB 
    body: "  @param list1 [Literal] The first list to join\n  @param list2 [Literal] The second list to join\n  @param separator [String] How the list separator (comma or space) should be determined.\n    If this is `comma` or `space`, that is always the separator;\n    if this is `auto` (the default), the separator is determined as explained above.\n"
full_name: Sass::Script::Functions#append
is_singleton: false
name: append
params: (list, val, separator = Sass::Script::String.new("auto"))
visibility: public
