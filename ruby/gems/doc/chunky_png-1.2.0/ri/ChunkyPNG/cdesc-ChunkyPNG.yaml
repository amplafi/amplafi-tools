--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: 
  - !ruby/object:RI::MethodSummary 
    name: Color
  - !ruby/object:RI::MethodSummary 
    name: Dimension
  - !ruby/object:RI::MethodSummary 
    name: Point
  - !ruby/object:RI::MethodSummary 
    name: Vector
comment: 
  - !ruby/struct:SM::Flow::P 
    body: ChunkyPNG - the pure ruby library to access PNG files.
  - !ruby/struct:SM::Flow::P 
    body: The ChunkyPNG module defines some constants that are used in the PNG specification, specifies some exception classes, and serves as a namespace for all the other modules and classes in this library.
  - !ruby/object:SM::Flow::LIST 
    contents: 
      - !ruby/struct:SM::Flow::LI 
        label: "{ChunkyPNG::Image}:"
        body: class to represent PNG images, including metadata.
      - !ruby/struct:SM::Flow::LI 
        label: "{ChunkyPNG::Canvas}:"
        body: class to represent the image's canvas.
      - !ruby/struct:SM::Flow::LI 
        label: "{ChunkyPNG::Color}:"
        body: module to work with color values.
      - !ruby/struct:SM::Flow::LI 
        label: "{ChunkyPNG::Palette}:"
        body: represents the palette of colors used on a {ChunkyPNG::Canvas}.
      - !ruby/struct:SM::Flow::LI 
        label: "{ChunkyPNG::Datastream}:"
        body: represents the internal structure of a PNG {ChunkyPNG::Image}.
      - !ruby/struct:SM::Flow::LI 
        label: "{ChunkyPNG::Color}:"
        body: represents one chunk of data within a {ChunkyPNG::Datastream}.
      - !ruby/struct:SM::Flow::LI 
        label: "{ChunkyPNG::Point}:"
        body: geometry helper class representing a 2-dimensional point.
      - !ruby/struct:SM::Flow::LI 
        label: "{ChunkyPNG::Dimension}:"
        body: geometry helper class representing a dimension (i.e. width x height).
      - !ruby/struct:SM::Flow::LI 
        label: "{ChunkyPNG::Vector}:"
        body: geometry helper class representing a series of points.
    type: :NOTE
  - !ruby/struct:SM::Flow::P 
    body: "@author Willem van Bergen"
constants: 
  - !ruby/object:RI::Constant 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: The current version of ChunkyPNG. This value will be updated automatically by them <tt>gem:release</tt> rake task.
    name: VERSION
    value: "\"1.2.0\""
  - !ruby/object:RI::Constant 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: Indicates that the PNG image uses grayscale colors, i.e. only a single teint channel. @private
    name: COLOR_GRAYSCALE
    value: "0"
  - !ruby/object:RI::Constant 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: Indicates that the PNG image uses true color, composed of a red green and blue channel. @private
    name: COLOR_TRUECOLOR
    value: "2"
  - !ruby/object:RI::Constant 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: Indicates that the PNG image uses indexed colors, where the values point to colors defined on a palette. @private
    name: COLOR_INDEXED
    value: "3"
  - !ruby/object:RI::Constant 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: Indicates that the PNG image uses grayscale colors with opacity, i.e. a teint channel with an alpha channel. @private
    name: COLOR_GRAYSCALE_ALPHA
    value: "4"
  - !ruby/object:RI::Constant 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: Indicates that the PNG image uses true color with opacity, composed of a red, green and blue channel, and an alpha value. @private
    name: COLOR_TRUECOLOR_ALPHA
    value: "6"
  - !ruby/object:RI::Constant 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: Indicates that the PNG specification's default compression method is used (Zlib/Deflate) @private
    name: COMPRESSION_DEFAULT
    value: "0"
  - !ruby/object:RI::Constant 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: Indicates that the image does not use interlacing. @private
    name: INTERLACING_NONE
    value: "0"
  - !ruby/object:RI::Constant 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: Indicates that the image uses Adam7 interlacing. @private
    name: INTERLACING_ADAM7
    value: "1"
  - !ruby/object:RI::Constant 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: Indicates that the PNG specification's default filtering are being used in the image. @private
    name: FILTERING_DEFAULT
    value: "0"
  - !ruby/object:RI::Constant 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: Indicates that no filtering is used for the scanline. @private
    name: FILTER_NONE
    value: "0"
  - !ruby/object:RI::Constant 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: Indicates that SUB filtering is used for the scanline. @private
    name: FILTER_SUB
    value: "1"
  - !ruby/object:RI::Constant 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: Indicates that UP filtering is used for the scanline. @private
    name: FILTER_UP
    value: "2"
  - !ruby/object:RI::Constant 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: Indicates that AVERAGE filtering is used for the scanline. @private
    name: FILTER_AVERAGE
    value: "3"
  - !ruby/object:RI::Constant 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: Indicates that PAETH filtering is used for the scanline. @private
    name: FILTER_PAETH
    value: "4"
  - !ruby/object:RI::Constant 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: Empty byte array. This basically is an empty string, but with the encoding set correctly to ASCII-8BIT (binary) in Ruby 1.9. @return [String] An empty string, with encoding set to binary in Ruby 1.9 @private
    name: EMPTY_BYTEARRAY
    value: "String.method_defined?(:force_encoding) ? \"\".force_encoding('ASCII-8BIT').freeze : \"\".freeze"
  - !ruby/object:RI::Constant 
    comment: 
      - !ruby/struct:SM::Flow::P 
        body: Null-byte, with the encoding set correctly to ASCII-8BIT (binary) in Ruby 1.9. @return [String] A binary string, consisting of one NULL-byte. @private
    name: EXTRA_BYTE
    value: "String.method_defined?(:force_encoding) ? \"\\0\".force_encoding('ASCII-8BIT') : \"\\0\""
full_name: ChunkyPNG
includes: []

instance_methods: []

name: ChunkyPNG
superclass: 
