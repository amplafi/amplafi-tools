--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
  - !ruby/struct:SM::Flow::P 
    body: Creates a base image and a mask image from an original image that has a particular theme color. This can be used to easily change a theme color in an image.
  - !ruby/struct:SM::Flow::P 
    body: It will extract all the pixels that look like the theme color (with a tolerance level) and put these in a mask image. All the other pixels will be stored in a base image. Both images will be of the exact same size as the original image. The original image will be left untouched.
  - !ruby/struct:SM::Flow::P 
    body: The color of the mask image can be changed with {#change_mask_color!}. This new mask image can then be composed upon the base image to create an image with a new theme color. A call to {#change_theme_color!} will perform this in one go.
  - !ruby/struct:SM::Flow::P 
    body: "@param [Integer] mask_color The current theme color. @param [Integer] bg_color The background color on which the theme colored pixels are applied. @param [Integer] tolerance The tolerance level to use when extracting the mask image. Five is"
  - !ruby/struct:SM::Flow::VERB 
    body: "   the default; increase this if the masked image does not extract all the required pixels,\n   decrease it if too many pixels get extracted.\n"
  - !ruby/struct:SM::Flow::P 
    body: "@return [Array&lt;ChunkyPNG::Canvas, ChunkyPNG::Canvas&gt;] An array with the base canvas and the mask"
  - !ruby/struct:SM::Flow::VERB 
    body: "   canvas as elements.\n"
  - !ruby/struct:SM::Flow::P 
    body: "@see #change_theme_color! @see #change_mask_color!"
full_name: ChunkyPNG::Canvas::Masking#extract_mask
is_singleton: false
name: extract_mask
params: (mask_color, bg_color = ChunkyPNG::Color::WHITE, tolerance = 5)
visibility: public
